#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."

mkdir -p "$DIR/obj"

docker build \
  -t lorcan/haskell-build:8.6 \
  --file "$DIR/containers/haskell-build.Dockerfile" \
  "$DIR"

run_haskell() {
  set +u
  docker run \
      --rm \
      -ti \
      -v "$DIR/:/opt/build" \
      -v "$DIR/obj/cabal-sandbox:/opt/build/.cabal-sandbox" \
      -v "$DIR/obj/dist-newstyle:/opt/build/dist-newstyle" \
      -w /opt/build \
      lorcan/haskell-build:8.6 \
        $1 $2 $3 $4 $5 $6 $7 $8 $9
  set -u
}

run_node() {
  set +u
  docker run \
      --rm \
      -e HOME=/opt/build/obj \
      -ti \
      -u $(id -u ${USER}):$(id -g ${USER}) \
      -v "$DIR/js:/opt/build" \
      -w /opt/build \
      node:8.0 \
        $1 $2 $3 $4 $5 $6 $7 $8 $9
  set -u
}

sudo chown -R "$USER" "$DIR"

run_haskell sh -c "cabal --symlink-bindir=/opt/build/bin v2-update && cabal --symlink-bindir=/opt/build/bin v2-install --dependencies-only"
run_haskell cabal v2-build

run_node npm install
run_node "./node_modules/.bin/webpack" \
  --config "webpack.config.js" \
  --mode=production

docker build -t lorcan/regex-candidates --file "$DIR/containers/service.Dockerfile" "$DIR"
